-- Autor: Enrique Paiva
-- Nota:  Solo para pruebas.
SET serveroutput ON;
DECLARE
	-- INICIO PEGAR AQUI DECLARE PROCEDIMIENTO A DEBUGGEAR
	
	OUT_CURSOR SYS_REFCURSOR;
	P_ID_PRODUCTO NUMBER;
	P_FECHA_PRODUCTO DATE;
	P_NOMBRE_PRODUCTO NVARCHAR2(200);
	
	-- FIN PEGAR AQUI DECLARE PROCEDIMIENTO A DEBUGGEAR
	
	OUT_CODIGO NUMBER; 
	OUT_MENSAJE VARCHAR2(16000);
	
--	INICIO PEGAR AQUI PROCEDIMIENTO
PROCEDURE PRC_REG_PRODUCTO_DEBUG
(
    OUT_CURSOR OUT SYS_REFCURSOR,
    OUT_CODIGO OUT NUMBER,
    OUT_MENSAJE OUT NVARCHAR2,
    P_ID_PRODUCTO NUMBER,
    P_FECHA_PRODUCTO DATE,
    P_NOMBRE_PRODUCTO NVARCHAR2
)
AS
  /**************************************************/
    GCSQLCODE   NUMBER;
    GCSQLERRM   VARCHAR2(100);
BEGIN
    
    INSERT INTO PRODUCTO(ID_PRODUCTO, FE_REGISTRO, NO_PRODUCTO) VALUES(P_ID_PRODUCTO, P_FECHA_PRODUCTO,P_NOMBRE_PRODUCTO);
    
    OPEN OUT_CURSOR FOR
        --SELECT 1 RESULTADO, 'SE REGISTRO EXITOSAMENTE' AS MSG_ERROR FROM DUAL;
        SELECT ID_PRODUCTO, FE_REGISTRO, NO_PRODUCTO 
        FROM PRODUCTO 
        WHERE TO_CHAR(SYSDATE,'DD/MM/RRRR') = TO_CHAR(FE_REGISTRO,'DD/MM/RRRR');
    
    OUT_CODIGO:= 1;
    OUT_MENSAJE:= 'SE REGISTRO EXITOSAMENTE';
    RETURN;

    EXCEPTION
        WHEN OTHERS THEN
            GCSQLCODE :=SQLCODE;
            GCSQLERRM :=SQLERRM;
            
        OPEN OUT_CURSOR FOR
            -- SELECT 0 RESULTADO, 'ERROR AL REGISTRAR PRODUCTO. GCSQLERRM: '|| GCSQLERRM  AS MSG_ERROR
            SELECT '' AS ID_PRODUCTO, '' AS FE_REGISTRO, '' AS NO_PRODUCTO FROM DUAL;
            OUT_CODIGO:= 0;
            OUT_MENSAJE:= 'OCURRIO UN PROBLEMA - CODIGO: '  || GCSQLCODE || ' - MENSAJE : ' ||GCSQLERRM ;
    
    RETURN;
END;
--	FIN PEGAR AQUI PROCEDIMIENTO

--	RUN PROCEDIMIENTO
BEGIN
	P_ID_PRODUCTO := 100;
	P_FECHA_PRODUCTO := SYSDATE();
    P_NOMBRE_PRODUCTO:= 'MOCHILA';
	
    PRC_REG_PRODUCTO_DEBUG(OUT_CURSOR,OUT_CODIGO, OUT_MENSAJE, P_ID_PRODUCTO, P_FECHA_PRODUCTO, P_NOMBRE_PRODUCTO);
    
    dbms_output.put_line( 'CODIGO' || ' | ' || OUT_CODIGO);
    dbms_output.put_line( 'MENSAJE' || ' | ' || OUT_MENSAJE);
        
	LOOP 
        --FETCH OUT_CURSOR INTO CODIGO, MSG_ERROR;
        FETCH OUT_CURSOR INTO P_ID_PRODUCTO, P_FECHA_PRODUCTO,P_NOMBRE_PRODUCTO;
        EXIT WHEN OUT_CURSOR%NOTFOUND;
            BEGIN
                dbms_output.put_line( P_ID_PRODUCTO || ' | ' || P_FECHA_PRODUCTO || ' | '||P_NOMBRE_PRODUCTO);
            END;
    END LOOP;
	CLOSE OUT_CURSOR;
	
END;